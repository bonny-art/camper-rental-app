{"version":3,"file":"static/js/161.31d8c941.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/FavoriteButton/FavoriteButton.jsx","components/CamperCard/CamperCard.jsx","components/CamperList/CamperList.jsx","components/Catalog/Catalog.jsx","components/AutocompleteInput/AutocompleteInput.jsx","components/CheckboxFilter/CheckboxFilter.jsx","components/RadioFilter/RadioFilter.jsx","components/SideBar/SideBar.jsx","components/pages/CatalogPage.jsx"],"sourcesContent":["import React from 'react';\n\nexport const Button = ({ children, onClick }) => {\n  return (\n    <button type=\"button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n","import React from 'react';\nimport { FaRegHeart, FaHeart } from 'react-icons/fa6';\nimport { useDispatch } from 'react-redux';\nimport { campersActions } from 'store/campers/campersSlice';\n\nexport const FavoriteButton = ({ camperId, isInFavorite }) => {\n  const dispatch = useDispatch();\n\n  const handleFavoriteClick = () => {\n    if (isInFavorite) {\n      dispatch(campersActions.removeFromFavoriteItemsAction(camperId));\n    } else {\n      dispatch(campersActions.addToFavoriteItemsAction(camperId));\n    }\n  };\n\n  return (\n    <button onClick={handleFavoriteClick}>\n      {isInFavorite ? <FaHeart /> : <FaRegHeart />}\n    </button>\n  );\n};\n","import { Button } from 'components/Button/Button';\nimport { FavoriteButton } from 'components/FavoriteButton/FavoriteButton';\nimport React from 'react';\nimport { campersSelectors } from '../../store/campers/campersSlice';\nimport { useSelector } from 'react-redux';\n\nexport const CamperCard = ({ camper }) => {\n  const {\n    _id,\n    name,\n    price,\n    rating,\n    reviews,\n    location,\n    description,\n    adults,\n    transmission,\n    engine,\n    details: { kitchen, airConditioner, beds },\n    gallery,\n  } = camper;\n\n  const favoriteItems = useSelector(campersSelectors.selectFavoriteItems);\n  const isInFavorite = favoriteItems.includes(_id);\n\n  const hasKitchen = kitchen > 0;\n  const hasAC = airConditioner > 0;\n\n  const reversedLocation = location.split(', ').reverse().join(', ');\n\n  return (\n    <li key={_id}>\n      <div>\n        <img src={gallery[0]} alt=\"\" />\n      </div>\n      <div>\n        <h2>{name}</h2>\n        <p>{price}</p>\n        <FavoriteButton camperId={_id} isInFavorite={isInFavorite} />\n        <p>{`${rating}(${reviews.length} Reviews)`}</p>\n        <p>{reversedLocation}</p>\n        <p>{description}</p>\n        <div>\n          <div>{`${adults} adults`}</div>\n          <div>{transmission}</div>\n          <div>{engine}</div>\n          {hasKitchen && <div>Kitchen</div>}\n          <div>{`${beds} beds`}</div>\n          {hasAC && <div>AC</div>}\n        </div>\n        <Button>Shoe more</Button>\n      </div>\n    </li>\n  );\n};\n","import React from 'react';\n\nimport { CamperCard } from 'components/CamperCard/CamperCard';\n\nexport const CamperList = ({ campers }) => {\n  return (\n    <ul>\n      {campers.map(c => (\n        <CamperCard key={c._id} camper={c} />\n      ))}\n    </ul>\n  );\n};\n","import { Button } from 'components/Button/Button';\nimport { CamperList } from 'components/CamperList/CamperList';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { campersSelectors } from '../../store/campers/campersSlice';\n\nexport const Catalog = () => {\n  const campers = useSelector(campersSelectors.selectCampers);\n\n  return (\n    <>\n      <CamperList campers={campers} />\n      <Button>Load more</Button>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nexport const AutocompleteInput = ({\n  suggestions,\n  onLocationSelect,\n  isCleared,\n  setIsCleared,\n}) => {\n  const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n  const [userInput, setUserInput] = useState('');\n\n  useEffect(() => {\n    if (isCleared) {\n      setUserInput('');\n      setIsCleared(false);\n    }\n  }, [isCleared, setIsCleared]);\n\n  const onChange = e => {\n    const userInput = e.currentTarget.value;\n    setUserInput(userInput);\n\n    const filtered = suggestions.filter(suggestion =>\n      suggestion.toLowerCase().includes(userInput.toLowerCase())\n    );\n\n    setFilteredSuggestions(userInput ? filtered : suggestions);\n  };\n\n  const handleFocus = () => {\n    setFilteredSuggestions(suggestions);\n  };\n\n  const handleSuggestionClick = suggestion => {\n    setUserInput(suggestion);\n    setFilteredSuggestions([]);\n    onLocationSelect(suggestion);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        onChange={onChange}\n        onFocus={handleFocus}\n        value={userInput}\n      />\n      <ul>\n        {filteredSuggestions.map((suggestion, index) => (\n          <li key={index} onClick={() => handleSuggestionClick(suggestion)}>\n            {suggestion}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nexport const CheckboxFilter = ({\n  onEquipmentChange,\n  isCleared,\n  setIsCleared,\n}) => {\n  const [selectedEquipment, setSelectedEquipment] = useState([]);\n  const [prevSelectedEquipment, setPrevSelectedEquipment] = useState([]);\n\n  useEffect(() => {\n    const hasSelectedEquipmentChanged =\n      selectedEquipment.length !== prevSelectedEquipment.length ||\n      !selectedEquipment.every(element =>\n        prevSelectedEquipment.includes(element)\n      );\n    if (hasSelectedEquipmentChanged) {\n      onEquipmentChange(selectedEquipment);\n      setPrevSelectedEquipment(selectedEquipment);\n    }\n  }, [selectedEquipment, prevSelectedEquipment, onEquipmentChange]);\n\n  useEffect(() => {\n    if (isCleared) {\n      setSelectedEquipment([]);\n      setPrevSelectedEquipment([]);\n      setIsCleared(false);\n    }\n  }, [isCleared, setIsCleared]);\n\n  const handleCheckboxChange = equipment => {\n    setSelectedEquipment(prev => {\n      const newSelectedEquipment = prev.includes(equipment)\n        ? prev.filter(item => item !== equipment)\n        : [...prev, equipment];\n      return newSelectedEquipment;\n    });\n  };\n\n  const createCheckbox = equipment => (\n    <label key={equipment}>\n      {equipment}\n      <input\n        type=\"checkbox\"\n        checked={selectedEquipment.includes(equipment)}\n        onChange={() => handleCheckboxChange(equipment)}\n      />\n    </label>\n  );\n\n  return (\n    <div>\n      {['AC', 'Automatic', 'Kitchen', 'TV', 'Shower/WC'].map(createCheckbox)}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nexport const RadioFilter = ({ onTypeChange, isCleared, setIsCleared }) => {\n  const [selectedValue, setSelectedValue] = useState('');\n\n  useEffect(() => {\n    if (isCleared) {\n      setSelectedValue('');\n      setIsCleared(false);\n    }\n  }, [isCleared, setIsCleared]);\n\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n    onTypeChange(event.target.value);\n  };\n\n  return (\n    <form>\n      <label>\n        Van\n        <input\n          type=\"radio\"\n          value=\"Van\"\n          name=\"typeFilter\"\n          onChange={handleChange}\n          checked={selectedValue === 'Van'}\n        />\n      </label>\n      <label>\n        Fully Integrated\n        <input\n          type=\"radio\"\n          value=\"Fully Integrated\"\n          name=\"typeFilter\"\n          onChange={handleChange}\n          checked={selectedValue === 'Fully Integrated'}\n        />\n      </label>\n      <label>\n        Alcove\n        <input\n          type=\"radio\"\n          value=\"Alcove\"\n          name=\"typeFilter\"\n          onChange={handleChange}\n          checked={selectedValue === 'Alcove'}\n        />\n      </label>\n    </form>\n  );\n};\n","import { AutocompleteInput } from 'components/AutocompleteInput/AutocompleteInput';\nimport { Button } from 'components/Button/Button';\nimport { CheckboxFilter } from 'components/CheckboxFilter/CheckboxFilter';\nimport { RadioFilter } from 'components/RadioFilter/RadioFilter';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { campersActions, campersSelectors } from 'store/campers/campersSlice';\n\nexport const SideBar = () => {\n  const dispatch = useDispatch();\n\n  const suggestions = useSelector(campersSelectors.getUniqueLocations);\n\n  const [location, setLocation] = useState('');\n  const [equipment, setEquipment] = useState([]);\n  const [type, setType] = useState('');\n\n  const [isCleared, setIsCleared] = useState(false);\n\n  const handleLocationSelect = newLocation => {\n    setLocation(newLocation);\n  };\n\n  const handleEquipmentChange = newEquipment => {\n    setEquipment([...newEquipment]);\n  };\n\n  const handleTypeChange = newType => {\n    setType(newType);\n  };\n\n  const handleButtonClick = actionName => {\n    if (actionName === 'search') {\n      const payload = {\n        location,\n        equipment,\n        type,\n      };\n\n      dispatch(campersActions.setFiltersAction(payload));\n    } else if (actionName === 'clear') {\n      setLocation('');\n      setEquipment([]);\n      setType('');\n      dispatch(campersActions.clearFiltersAction());\n      setIsCleared(true);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <h4>Location</h4>\n        <AutocompleteInput\n          suggestions={suggestions}\n          onLocationSelect={handleLocationSelect}\n          isCleared={isCleared}\n          setIsCleared={setIsCleared}\n        />\n      </div>\n      <h3>Filters</h3>\n      <div>\n        <h4>Vehicle equipment</h4>\n        <CheckboxFilter\n          onEquipmentChange={handleEquipmentChange}\n          isCleared={isCleared}\n          setIsCleared={setIsCleared}\n        />\n      </div>\n      <div>\n        <h4>Vehicle type</h4>\n        <RadioFilter\n          onTypeChange={handleTypeChange}\n          isCleared={isCleared}\n          setIsCleared={setIsCleared}\n        />\n      </div>\n      <Button onClick={() => handleButtonClick('search')}>Search</Button>\n      <Button onClick={() => handleButtonClick('clear')}>Clear</Button>\n    </div>\n  );\n};\n","import { Catalog } from 'components/Catalog/Catalog';\nimport { SideBar } from 'components/SideBar/SideBar';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { campersActions } from 'store/campers/campersSlice';\n\nconst CatalogPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(campersActions.getCampersAction());\n  }, [dispatch]);\n\n  return (\n    <>\n      <SideBar />\n      <Catalog />\n    </>\n  );\n};\nexport default CatalogPage;\n"],"names":["Button","_ref","children","onClick","_jsx","type","FavoriteButton","camperId","isInFavorite","dispatch","useDispatch","campersActions","FaHeart","FaRegHeart","CamperCard","camper","_id","name","price","rating","reviews","location","description","adults","transmission","engine","_camper$details","details","kitchen","airConditioner","beds","gallery","useSelector","campersSelectors","includes","hasKitchen","hasAC","reversedLocation","split","reverse","join","_jsxs","src","alt","concat","length","CamperList","campers","map","c","Catalog","_Fragment","AutocompleteInput","suggestions","onLocationSelect","isCleared","setIsCleared","_useState","useState","_useState2","_slicedToArray","filteredSuggestions","setFilteredSuggestions","_useState3","_useState4","userInput","setUserInput","useEffect","onChange","e","currentTarget","value","filtered","filter","suggestion","toLowerCase","onFocus","index","handleSuggestionClick","CheckboxFilter","onEquipmentChange","selectedEquipment","setSelectedEquipment","prevSelectedEquipment","setPrevSelectedEquipment","every","element","equipment","checked","prev","item","_toConsumableArray","handleCheckboxChange","RadioFilter","onTypeChange","selectedValue","setSelectedValue","handleChange","event","target","SideBar","setLocation","setEquipment","_useState5","_useState6","setType","_useState7","_useState8","handleButtonClick","actionName","payload","newLocation","newEquipment","newType"],"sourceRoot":""}